// Code generated by protoc-gen-go. DO NOT EDIT.
// source: concord_hlf.proto

package peer // import "github.com/hyperledger/fabric/protos/peer"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type KvbMessageType int32

const (
	KvbMessage_VALID   KvbMessageType = 0
	KvbMessage_INVALID KvbMessageType = 1
)

var KvbMessageType_name = map[int32]string{
	0: "VALID",
	1: "INVALID",
}
var KvbMessageType_value = map[string]int32{
	"VALID":   0,
	"INVALID": 1,
}

func (x KvbMessageType) Enum() *KvbMessageType {
	p := new(KvbMessageType)
	*p = x
	return p
}
func (x KvbMessageType) String() string {
	return proto.EnumName(KvbMessageType_name, int32(x))
}
func (x *KvbMessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(KvbMessageType_value, data, "KvbMessageType")
	if err != nil {
		return err
	}
	*x = KvbMessageType(value)
	return nil
}
func (KvbMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_concord_hlf_7412e23e96ddcbe7, []int{0, 0}
}

type KvbMessage struct {
	State                *KvbMessageType `protobuf:"varint,1,opt,name=state,enum=protos.KvbMessageType" json:"state,omitempty"`
	Key                  *string         `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Value                *string         `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *KvbMessage) Reset()         { *m = KvbMessage{} }
func (m *KvbMessage) String() string { return proto.CompactTextString(m) }
func (*KvbMessage) ProtoMessage()    {}
func (*KvbMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_concord_hlf_7412e23e96ddcbe7, []int{0}
}
func (m *KvbMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KvbMessage.Unmarshal(m, b)
}
func (m *KvbMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KvbMessage.Marshal(b, m, deterministic)
}
func (dst *KvbMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KvbMessage.Merge(dst, src)
}
func (m *KvbMessage) XXX_Size() int {
	return xxx_messageInfo_KvbMessage.Size(m)
}
func (m *KvbMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_KvbMessage.DiscardUnknown(m)
}

var xxx_messageInfo_KvbMessage proto.InternalMessageInfo

func (m *KvbMessage) GetState() KvbMessageType {
	if m != nil && m.State != nil {
		return *m.State
	}
	return KvbMessage_VALID
}

func (m *KvbMessage) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *KvbMessage) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

// For the purpose of Rang query
type QueryResponseConcord struct {
	Results              [][]byte `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
	HasMore              *bool    `protobuf:"varint,2,opt,name=has_more,json=hasMore" json:"has_more,omitempty"`
	Id                   *string  `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Metadata             []byte   `protobuf:"bytes,4,opt,name=metadata" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryResponseConcord) Reset()         { *m = QueryResponseConcord{} }
func (m *QueryResponseConcord) String() string { return proto.CompactTextString(m) }
func (*QueryResponseConcord) ProtoMessage()    {}
func (*QueryResponseConcord) Descriptor() ([]byte, []int) {
	return fileDescriptor_concord_hlf_7412e23e96ddcbe7, []int{1}
}
func (m *QueryResponseConcord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResponseConcord.Unmarshal(m, b)
}
func (m *QueryResponseConcord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResponseConcord.Marshal(b, m, deterministic)
}
func (dst *QueryResponseConcord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResponseConcord.Merge(dst, src)
}
func (m *QueryResponseConcord) XXX_Size() int {
	return xxx_messageInfo_QueryResponseConcord.Size(m)
}
func (m *QueryResponseConcord) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResponseConcord.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResponseConcord proto.InternalMessageInfo

func (m *QueryResponseConcord) GetResults() [][]byte {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *QueryResponseConcord) GetHasMore() bool {
	if m != nil && m.HasMore != nil {
		return *m.HasMore
	}
	return false
}

func (m *QueryResponseConcord) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *QueryResponseConcord) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type QueryResultBytesConcord struct {
	ResultBytes          []byte   `protobuf:"bytes,1,opt,name=result_bytes,json=resultBytes" json:"result_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryResultBytesConcord) Reset()         { *m = QueryResultBytesConcord{} }
func (m *QueryResultBytesConcord) String() string { return proto.CompactTextString(m) }
func (*QueryResultBytesConcord) ProtoMessage()    {}
func (*QueryResultBytesConcord) Descriptor() ([]byte, []int) {
	return fileDescriptor_concord_hlf_7412e23e96ddcbe7, []int{2}
}
func (m *QueryResultBytesConcord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResultBytesConcord.Unmarshal(m, b)
}
func (m *QueryResultBytesConcord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResultBytesConcord.Marshal(b, m, deterministic)
}
func (dst *QueryResultBytesConcord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResultBytesConcord.Merge(dst, src)
}
func (m *QueryResultBytesConcord) XXX_Size() int {
	return xxx_messageInfo_QueryResultBytesConcord.Size(m)
}
func (m *QueryResultBytesConcord) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResultBytesConcord.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResultBytesConcord proto.InternalMessageInfo

func (m *QueryResultBytesConcord) GetResultBytes() []byte {
	if m != nil {
		return m.ResultBytes
	}
	return nil
}

// In GetHistoryFoKey, the bytes in QueryResultBytes are marshalled from
// KeyModification
type KeyModificationConcord struct {
	TxId *string `protobuf:"bytes,1,opt,name=tx_id,json=txId" json:"tx_id,omitempty"`
	// return the Concord one
	Value                []byte   `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Timestamp            *int64   `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	IsDelete             *bool    `protobuf:"varint,4,opt,name=is_delete,json=isDelete" json:"is_delete,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyModificationConcord) Reset()         { *m = KeyModificationConcord{} }
func (m *KeyModificationConcord) String() string { return proto.CompactTextString(m) }
func (*KeyModificationConcord) ProtoMessage()    {}
func (*KeyModificationConcord) Descriptor() ([]byte, []int) {
	return fileDescriptor_concord_hlf_7412e23e96ddcbe7, []int{3}
}
func (m *KeyModificationConcord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyModificationConcord.Unmarshal(m, b)
}
func (m *KeyModificationConcord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyModificationConcord.Marshal(b, m, deterministic)
}
func (dst *KeyModificationConcord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyModificationConcord.Merge(dst, src)
}
func (m *KeyModificationConcord) XXX_Size() int {
	return xxx_messageInfo_KeyModificationConcord.Size(m)
}
func (m *KeyModificationConcord) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyModificationConcord.DiscardUnknown(m)
}

var xxx_messageInfo_KeyModificationConcord proto.InternalMessageInfo

func (m *KeyModificationConcord) GetTxId() string {
	if m != nil && m.TxId != nil {
		return *m.TxId
	}
	return ""
}

func (m *KeyModificationConcord) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *KeyModificationConcord) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *KeyModificationConcord) GetIsDelete() bool {
	if m != nil && m.IsDelete != nil {
		return *m.IsDelete
	}
	return false
}

func init() {
	proto.RegisterType((*KvbMessage)(nil), "protos.KvbMessage")
	proto.RegisterType((*QueryResponseConcord)(nil), "protos.QueryResponseConcord")
	proto.RegisterType((*QueryResultBytesConcord)(nil), "protos.QueryResultBytesConcord")
	proto.RegisterType((*KeyModificationConcord)(nil), "protos.KeyModificationConcord")
	proto.RegisterEnum("protos.KvbMessageType", KvbMessageType_name, KvbMessageType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Access service

type AccessClient interface {
	GetState(ctx context.Context, in *KvbMessage, opts ...grpc.CallOption) (*KvbMessage, error)
	PutState(ctx context.Context, in *KvbMessage, opts ...grpc.CallOption) (*KvbMessage, error)
	WriteBlock(ctx context.Context, in *KvbMessage, opts ...grpc.CallOption) (*KvbMessage, error)
	// use chaincode name + key as the KEY
	GetHistoryForKey(ctx context.Context, in *KvbMessage, opts ...grpc.CallOption) (*QueryResponseConcord, error)
}

type accessClient struct {
	cc *grpc.ClientConn
}

func NewAccessClient(cc *grpc.ClientConn) AccessClient {
	return &accessClient{cc}
}

func (c *accessClient) GetState(ctx context.Context, in *KvbMessage, opts ...grpc.CallOption) (*KvbMessage, error) {
	out := new(KvbMessage)
	err := grpc.Invoke(ctx, "/protos.Access/GetState", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accessClient) PutState(ctx context.Context, in *KvbMessage, opts ...grpc.CallOption) (*KvbMessage, error) {
	out := new(KvbMessage)
	err := grpc.Invoke(ctx, "/protos.Access/PutState", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accessClient) WriteBlock(ctx context.Context, in *KvbMessage, opts ...grpc.CallOption) (*KvbMessage, error) {
	out := new(KvbMessage)
	err := grpc.Invoke(ctx, "/protos.Access/WriteBlock", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accessClient) GetHistoryForKey(ctx context.Context, in *KvbMessage, opts ...grpc.CallOption) (*QueryResponseConcord, error) {
	out := new(QueryResponseConcord)
	err := grpc.Invoke(ctx, "/protos.Access/GetHistoryForKey", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Access service

type AccessServer interface {
	GetState(context.Context, *KvbMessage) (*KvbMessage, error)
	PutState(context.Context, *KvbMessage) (*KvbMessage, error)
	WriteBlock(context.Context, *KvbMessage) (*KvbMessage, error)
	// use chaincode name + key as the KEY
	GetHistoryForKey(context.Context, *KvbMessage) (*QueryResponseConcord, error)
}

func RegisterAccessServer(s *grpc.Server, srv AccessServer) {
	s.RegisterService(&_Access_serviceDesc, srv)
}

func _Access_GetState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvbMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccessServer).GetState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Access/GetState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccessServer).GetState(ctx, req.(*KvbMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Access_PutState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvbMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccessServer).PutState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Access/PutState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccessServer).PutState(ctx, req.(*KvbMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Access_WriteBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvbMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccessServer).WriteBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Access/WriteBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccessServer).WriteBlock(ctx, req.(*KvbMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Access_GetHistoryForKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvbMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccessServer).GetHistoryForKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Access/GetHistoryForKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccessServer).GetHistoryForKey(ctx, req.(*KvbMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Access_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.Access",
	HandlerType: (*AccessServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetState",
			Handler:    _Access_GetState_Handler,
		},
		{
			MethodName: "PutState",
			Handler:    _Access_PutState_Handler,
		},
		{
			MethodName: "WriteBlock",
			Handler:    _Access_WriteBlock_Handler,
		},
		{
			MethodName: "GetHistoryForKey",
			Handler:    _Access_GetHistoryForKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "concord_hlf.proto",
}

func init() { proto.RegisterFile("concord_hlf.proto", fileDescriptor_concord_hlf_7412e23e96ddcbe7) }

var fileDescriptor_concord_hlf_7412e23e96ddcbe7 = []byte{
	// 445 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x4f, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0xe3, 0xfc, 0x69, 0x9c, 0x69, 0x54, 0x85, 0xa5, 0xa2, 0xa6, 0x54, 0x28, 0xf8, 0x14,
	0x84, 0x48, 0xa4, 0x0a, 0x71, 0xe2, 0xd2, 0x50, 0xb5, 0x44, 0x21, 0x08, 0x16, 0x09, 0x24, 0x2e,
	0xd6, 0xc6, 0x3b, 0x89, 0x57, 0xb5, 0xb3, 0xd6, 0xee, 0xb8, 0xd4, 0x17, 0x2e, 0x7c, 0x65, 0x3e,
	0x00, 0xca, 0x1a, 0x93, 0x43, 0x73, 0xe9, 0xc9, 0x7e, 0x4f, 0xef, 0xe7, 0x37, 0x9a, 0x31, 0x3c,
	0x8a, 0xf5, 0x26, 0xd6, 0x46, 0x46, 0x49, 0xba, 0x1a, 0xe7, 0x46, 0x93, 0x66, 0x07, 0xee, 0x61,
	0xc3, 0xdf, 0x1e, 0xc0, 0xfc, 0x76, 0xb9, 0x40, 0x6b, 0xc5, 0x1a, 0xd9, 0x6b, 0xe8, 0x58, 0x12,
	0x84, 0x81, 0x37, 0xf4, 0x46, 0x47, 0xe7, 0x27, 0x55, 0xda, 0x8e, 0x77, 0x91, 0x31, 0x95, 0x39,
	0xf2, 0x2a, 0xc5, 0x06, 0xd0, 0xba, 0xc1, 0x32, 0x68, 0x0e, 0xbd, 0x51, 0x8f, 0x6f, 0x5f, 0xd9,
	0x31, 0x74, 0x6e, 0x45, 0x5a, 0x60, 0xd0, 0x72, 0x5e, 0x25, 0xc2, 0xe7, 0xd0, 0xde, 0x62, 0xac,
	0x07, 0x9d, 0x6f, 0x17, 0x1f, 0x67, 0x97, 0x83, 0x06, 0x3b, 0x84, 0xee, 0xec, 0x53, 0x25, 0xbc,
	0xf0, 0x27, 0x1c, 0x7f, 0x29, 0xd0, 0x94, 0x1c, 0x6d, 0xae, 0x37, 0x16, 0xdf, 0x57, 0xf3, 0xb2,
	0x00, 0xba, 0x06, 0x6d, 0x91, 0x92, 0x0d, 0xbc, 0x61, 0x6b, 0xd4, 0xe7, 0xb5, 0x64, 0x4f, 0xc1,
	0x4f, 0x84, 0x8d, 0x32, 0x6d, 0xd0, 0xd5, 0xfb, 0xbc, 0x9b, 0x08, 0xbb, 0xd0, 0x06, 0xd9, 0x11,
	0x34, 0x95, 0xfc, 0xd7, 0xdf, 0x54, 0x92, 0x9d, 0x82, 0x9f, 0x21, 0x09, 0x29, 0x48, 0x04, 0xed,
	0xa1, 0x37, 0xea, 0xf3, 0xff, 0x3a, 0x7c, 0x07, 0x27, 0x75, 0x71, 0x91, 0xd2, 0xb4, 0x24, 0xb4,
	0x75, 0xf7, 0x0b, 0xe8, 0x57, 0x65, 0xd1, 0x72, 0x6b, 0xbb, 0x8d, 0xf4, 0xf9, 0xa1, 0xd9, 0x25,
	0xc3, 0x5f, 0xf0, 0x64, 0x8e, 0xe5, 0x42, 0x4b, 0xb5, 0x52, 0xb1, 0x20, 0xa5, 0x37, 0x35, 0xfc,
	0x18, 0x3a, 0x74, 0x17, 0x29, 0xe9, 0xa8, 0x1e, 0x6f, 0xd3, 0xdd, 0x4c, 0xee, 0x76, 0xd3, 0x74,
	0x9f, 0xaa, 0x04, 0x3b, 0x83, 0x1e, 0xa9, 0x0c, 0x2d, 0x89, 0x2c, 0x77, 0x53, 0xb7, 0xf8, 0xce,
	0x60, 0xcf, 0xa0, 0xa7, 0x6c, 0x24, 0x31, 0x45, 0x42, 0x37, 0xbd, 0xcf, 0x7d, 0x65, 0x2f, 0x9d,
	0x3e, 0xff, 0xe3, 0xc1, 0xc1, 0x45, 0x1c, 0xa3, 0xb5, 0xec, 0x0d, 0xf8, 0xd7, 0x48, 0x5f, 0xdd,
	0x55, 0xd8, 0xfd, 0xab, 0x9d, 0xee, 0xf1, 0xc2, 0xc6, 0x96, 0xfa, 0x5c, 0x3c, 0x98, 0x7a, 0x0b,
	0xf0, 0xdd, 0x28, 0xc2, 0x69, 0xaa, 0xe3, 0x9b, 0x07, 0x70, 0x57, 0x30, 0xb8, 0x46, 0xfa, 0xa0,
	0x2c, 0x69, 0x53, 0x5e, 0x69, 0x33, 0xc7, 0x72, 0x2f, 0x7d, 0x56, 0x7b, 0xfb, 0xfe, 0x89, 0xb0,
	0x31, 0x7d, 0xf5, 0xe3, 0xe5, 0x5a, 0x51, 0x52, 0x2c, 0xc7, 0xb1, 0xce, 0x26, 0x49, 0x99, 0xa3,
	0x49, 0x51, 0xae, 0xd1, 0x4c, 0x56, 0x62, 0x69, 0x54, 0x3c, 0xa9, 0xf0, 0x49, 0x8e, 0x68, 0xfe,
	0x06, 0x00, 0x00, 0xff, 0xff, 0xa9, 0x39, 0xff, 0x4d, 0xfc, 0x02, 0x00, 0x00,
}
