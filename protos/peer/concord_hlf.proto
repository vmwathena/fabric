syntax = "proto2";
package com.vmware.concord.kvb;

import "peer/chaincode_shim.proto";

option go_package = "github.com/hyperledger/fabric/protos/peer";

service Access {
  rpc GetState (KvbMessage) returns (KvbMessage) {}
  rpc PutState (KvbMessage) returns (KvbMessage) {}
  rpc WriteBlock (KvbMessage) returns (KvbMessage) {}
  // use chaincode name + key as the KEY 
  rpc GetHistoryForKey (KvbMessage) returns (protos.QueryResponse) {}
  // GetStateNext is used for pagination purpose

  // rpc AddTransaction (KvbMessage) returns (KvbMessage){}
}

message KvbMessage {
  enum type {
      VALID = 0;
      INVALID = 1;
  }
  optional type state = 1;
  optional string key = 2;
  optional string value = 3;
}

// In GetHistoryFoKey, the bytes in QueryResultBytes are marshalled from
// KeyModification 
//message KeyModificationConcord {
//  optional string tx_id = 1;  // tx_id is mismatched between Concord and HLF,
//                              // return the Concord one
//  optional bytes value = 2;
//  optional int64 timestamp = 3;
//  optional bool is_delete = 4;
//}
